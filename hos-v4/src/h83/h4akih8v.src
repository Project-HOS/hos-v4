; --------------------------------------------------------------------------- 
;  HOS-V4                                                                     
;    割り込みベクタ  (日立 H8/300H 用)                                        
;                                                                             
;                                     Copyright (C) 1998-2002 by Project HOS  
;                                     http://sourceforge.jp/projects/hos/     
; --------------------------------------------------------------------------- 


		.CPU     300HA



		.SECTION  D,DATA,ALIGN=2
		.SECTION  X,DATA,ALIGN=2
		.SECTION  B,DATA,ALIGN=2

		.SECTION  VECT,DATA,ALIGN=2


; -----------------------------------------------
;          割り込みベクタテーブル
; -----------------------------------------------
		.DATA.L	reset_vector
		.DATA.L	int01_vector
		.DATA.L	int02_vector
		.DATA.L	int03_vector
		.DATA.L	int04_vector
		.DATA.L	int05_vector
		.DATA.L	int06_vector
		.DATA.L	int07_vector
		.DATA.L	int08_vector
		.DATA.L	int09_vector
		.DATA.L	int0a_vector
		.DATA.L	int0b_vector
		.DATA.L	int0c_vector
		.DATA.L	int0d_vector
		.DATA.L	int0e_vector
		.DATA.L	int0f_vector
		.DATA.L	int10_vector
		.DATA.L	int11_vector
		.DATA.L	int12_vector
		.DATA.L	int13_vector
		.DATA.L	int14_vector
		.DATA.L	int15_vector
		.DATA.L	int16_vector
		.DATA.L	int17_vector
		.DATA.L	int18_vector
		.DATA.L	int19_vector
		.DATA.L	int1a_vector
		.DATA.L	int1b_vector
		.DATA.L	int1c_vector
		.DATA.L	int1d_vector
		.DATA.L	int1e_vector
		.DATA.L	int1f_vector
		.DATA.L	int20_vector
		.DATA.L	int21_vector
		.DATA.L	int22_vector
		.DATA.L	int23_vector
		.DATA.L	int24_vector
		.DATA.L	int25_vector
		.DATA.L	int26_vector
		.DATA.L	int27_vector
		.DATA.L	int28_vector
		.DATA.L	int29_vector
		.DATA.L	int2a_vector
		.DATA.L	int2b_vector
		.DATA.L	int2c_vector
		.DATA.L	int2d_vector
		.DATA.L	int2e_vector
		.DATA.L	int2f_vector
		.DATA.L	int30_vector
		.DATA.L	int31_vector
		.DATA.L	int32_vector
		.DATA.L	int33_vector
		.DATA.L	int34_vector
		.DATA.L	int35_vector
		.DATA.L	int36_vector
		.DATA.L	int37_vector
		.DATA.L	int38_vector
		.DATA.L	int39_vector
		.DATA.L	int3a_vector
		.DATA.L	int3b_vector
		.DATA.L	int3c_vector
		.DATA.L	int3d_vector
		.DATA.L	int3e_vector
		.DATA.L	int3f_vector



		.SECTION P,CODE,ALIGN=2

		.IMPORT  _kernel_sys_sp		; システム用スタックのアドレス
		.IMPORT  _main			; main関数

; -----------------------------------------------
;          リセットベクター
; -----------------------------------------------
reset_vector:
	; ----- スタック初期化
		mov.l	@_kernel_sys_sp, er7	
		
	; ----- D セクションコピー （DATAが64kbyte以下と仮定）
		mov.l	#(STARTOF D), er5
		mov.l	#(STARTOF X), er6
		mov.w	#(LWORD (SIZEOF X)),r4
copy_dsec:	eepmov.w
		mov.w	r4, r4
		bne	copy_dsec
		
	; ----- B セクションクリア（BSSが64kbyte以下と仮定）
		mov.l	#(startof B), er5
		mov.l	#((startof B)+1), er6
		mov.w	#((lword (sizeof B)) - 1), r4
		mov.b	#0, r0l
		mov.b	r0l, @er5
clr_bsec:	eepmov.w
		mov.w	r4, r4
		bne	clr_bsec
		
	; ----- メイン関数呼び出し
		jmp	@_main



; -----------------------------------------------
;          割り込みハンドラ
; -----------------------------------------------
		.IMPORT	_HOS_int_hdr

int01_vector:	push.l	er0
		mov.l	#H'01, er0
		jmp	@_HOS_int_hdr

int02_vector:	push.l	er0
		mov.l	#H'02, er0
		jmp	@_HOS_int_hdr

int03_vector:	push.l	er0
		mov.l	#H'03, er0
		jmp	@_HOS_int_hdr

int04_vector:	push.l	er0
		mov.l	#H'04, er0
		jmp	@_HOS_int_hdr

int05_vector:	push.l	er0
		mov.l	#H'05, er0
		jmp	@_HOS_int_hdr

int06_vector:	push.l	er0
		mov.l	#H'06, er0
		jmp	@_HOS_int_hdr

int07_vector:	push.l	er0
		mov.l	#H'07, er0
		jmp	@_HOS_int_hdr

int08_vector:	push.l	er0
		mov.l	#H'08, er0
		jmp	@_HOS_int_hdr

int09_vector:	push.l	er0
		mov.l	#H'09, er0
		jmp	@_HOS_int_hdr

int0a_vector:	push.l	er0
		mov.l	#H'0a, er0
		jmp	@_HOS_int_hdr

int0b_vector:	push.l	er0
		mov.l	#H'0b, er0
		jmp	@_HOS_int_hdr

int0c_vector:	push.l	er0
		mov.l	#H'0c, er0
		jmp	@_HOS_int_hdr

int0d_vector:	push.l	er0
		mov.l	#H'0d, er0
		jmp	@_HOS_int_hdr

int0e_vector:	push.l	er0
		mov.l	#H'0e, er0
		jmp	@_HOS_int_hdr

int0f_vector:	push.l	er0
		mov.l	#H'0f, er0
		jmp	@_HOS_int_hdr

int10_vector:	push.l	er0
		mov.l	#H'10, er0
		jmp	@_HOS_int_hdr

int11_vector:	push.l	er0
		mov.l	#H'11, er0
		jmp	@_HOS_int_hdr

int12_vector:	push.l	er0
		mov.l	#H'12, er0
		jmp	@_HOS_int_hdr

int13_vector:	push.l	er0
		mov.l	#H'13, er0
		jmp	@_HOS_int_hdr

int14_vector:	push.l	er0
		mov.l	#H'14, er0
		jmp	@_HOS_int_hdr

int15_vector:	push.l	er0
		mov.l	#H'15, er0
		jmp	@_HOS_int_hdr

int16_vector:	push.l	er0
		mov.l	#H'16, er0
		jmp	@_HOS_int_hdr

int17_vector:	push.l	er0
		mov.l	#H'17, er0
		jmp	@_HOS_int_hdr

int18_vector:	push.l	er0
		mov.l	#H'18, er0
		jmp	@_HOS_int_hdr

int19_vector:	push.l	er0
		mov.l	#H'19, er0
		jmp	@_HOS_int_hdr

int1a_vector:	push.l	er0
		mov.l	#H'1a, er0
		jmp	@_HOS_int_hdr

int1b_vector:	push.l	er0
		mov.l	#H'1b, er0
		jmp	@_HOS_int_hdr

int1c_vector:	push.l	er0
		mov.l	#H'1c, er0
		jmp	@_HOS_int_hdr

int1d_vector:	push.l	er0
		mov.l	#H'1d, er0
		jmp	@_HOS_int_hdr

int1e_vector:	push.l	er0
		mov.l	#H'1e, er0
		jmp	@_HOS_int_hdr

int1f_vector:	push.l	er0
		mov.l	#H'1f, er0
		jmp	@_HOS_int_hdr

int20_vector:	push.l	er0
		mov.l	#H'20, er0
		jmp	@_HOS_int_hdr

int21_vector:	push.l	er0
		mov.l	#H'21, er0
		jmp	@_HOS_int_hdr

int22_vector:	push.l	er0
		mov.l	#H'22, er0
		jmp	@_HOS_int_hdr

int23_vector:	push.l	er0
		mov.l	#H'23, er0
		jmp	@_HOS_int_hdr

int24_vector:	push.l	er0
		mov.l	#H'24, er0
		jmp	@_HOS_int_hdr

int25_vector:	push.l	er0
		mov.l	#H'25, er0
		jmp	@_HOS_int_hdr

int26_vector:	push.l	er0
		mov.l	#H'26, er0
		jmp	@_HOS_int_hdr

int27_vector:	push.l	er0
		mov.l	#H'27, er0
		jmp	@_HOS_int_hdr

int28_vector:	push.l	er0
		mov.l	#H'28, er0
		jmp	@_HOS_int_hdr

int29_vector:	push.l	er0
		mov.l	#H'29, er0
		jmp	@_HOS_int_hdr

int2a_vector:	push.l	er0
		mov.l	#H'2a, er0
		jmp	@_HOS_int_hdr

int2b_vector:	push.l	er0
		mov.l	#H'2b, er0
		jmp	@_HOS_int_hdr

int2c_vector:	push.l	er0
		mov.l	#H'2c, er0
		jmp	@_HOS_int_hdr

int2d_vector:	push.l	er0
		mov.l	#H'2d, er0
		jmp	@_HOS_int_hdr

int2e_vector:	push.l	er0
		mov.l	#H'2e, er0
		jmp	@_HOS_int_hdr

int2f_vector:	push.l	er0
		mov.l	#H'2f, er0
		jmp	@_HOS_int_hdr

int30_vector:	push.l	er0
		mov.l	#H'30, er0
		jmp	@_HOS_int_hdr

int31_vector:	push.l	er0
		mov.l	#H'31, er0
		jmp	@_HOS_int_hdr

int32_vector:	push.l	er0
		mov.l	#H'32, er0
		jmp	@_HOS_int_hdr

int33_vector:	push.l	er0
		mov.l	#H'33, er0
		jmp	@_HOS_int_hdr

int34_vector:	push.l	er0
		mov.l	#H'34, er0
		jmp	@_HOS_int_hdr

int35_vector:	push.l	er0
		mov.l	#H'35, er0
		jmp	@_HOS_int_hdr

int36_vector:	push.l	er0
		mov.l	#H'36, er0
		jmp	@_HOS_int_hdr

int37_vector:	push.l	er0
		mov.l	#H'37, er0
		jmp	@_HOS_int_hdr

int38_vector:	push.l	er0
		mov.l	#H'38, er0
		jmp	@_HOS_int_hdr

int39_vector:	push.l	er0
		mov.l	#H'39, er0
		jmp	@_HOS_int_hdr

int3a_vector:	push.l	er0
		mov.l	#H'3a, er0
		jmp	@_HOS_int_hdr

int3b_vector:	push.l	er0
		mov.l	#H'3b, er0
		jmp	@_HOS_int_hdr

int3c_vector:	push.l	er0
		mov.l	#H'3c, er0
		jmp	@_HOS_int_hdr

int3d_vector:	push.l	er0
		mov.l	#H'3d, er0
		jmp	@_HOS_int_hdr

int3e_vector:	push.l	er0
		mov.l	#H'3e, er0
		jmp	@_HOS_int_hdr

int3f_vector:	push.l	er0
		mov.l	#H'3f, er0
		jmp	@_HOS_int_hdr



		.END



; --------------------------------------------------------------------------- 
;  Copyright (C) 1998-2002 by Project HOS                                     
; --------------------------------------------------------------------------- 
