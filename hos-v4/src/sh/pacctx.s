/* ------------------------------------------------------------------------ */
/*  HOS-V4                                                                  */
/*    プロセッサ抽象化コンポーネント (日立 SH2用)                           */
/*     (動作未確認 ほぼ新井さんから頂いたコードのコピーです m(_ _)m  )      */
/*                                                                          */
/*                              Copyright (C) 1998-2002 by Ryuji Fuchikami  */
/* ------------------------------------------------------------------------ */



				.little

				.global	_hospac_dis_int			/* 割り込み禁止 */
				.global	_hospac_ena_int			/* 割り込み許可 */
				.global	_hospac_cre_cnt_asm		/* 実行コンテキストの作成 */
				.global	_hospac_swi_cnt			/* 実行コンテキストの切替 */



/************************************************
  割り込み禁止
  void hospac_dis_int(void)
************************************************/
				.text
				.align	2
_hospac_dis_int:
				mov		#0, r0
				rts
				ldc		r0, sr



/************************************************
  割り込み許可
  void hospac_ena_int(void)
************************************************/
				.text
				.align	2
_hospac_ena_int:
				mov		#-1, r0
				rts
				ldc		r0, sr



/************************************************
  実行コンテキストエントリーアドレス
************************************************/
				.text
				.align 2
ctx_entry:	 	
				jmp		@r8			/* 実行アドレスにジャンプ */
				mov		r9, r4		/* 実行時パラメータを第一引数に設定 */


/************************************************
  実行コンテキストの作成
  void hospac_cre_cnt_asm(
		 T_HOSPAC_CTXINF *pk_ctxinf,	作成するコンテキスト
		 VP 	sp, 					スタックポインタ
		 void	(*task)(VP_INT),		実行アドレス
		 VP_INT exinf)					実行時パラメータ
************************************************/
				.text
				.align 2
_hospac_cre_cnt_asm:
				add 	#-20, r5				/* r14-10分コンテキストのstackを伸ばす */
				mov.l	r7, @-r5				/* 実行パラメータの格納(r9) */
				mov.l	r6, @-r5				/* 実行アドレスの格納(r8) */
				mov.l	ctx_entry_addr, r0		/* 実行エントリポイントをコンテキストの */
				mov.l	r0, @-r5				/* スタックに保存 */
				rts
				mov.l	r5, @(0,r4) 			/* コンテキストのスタックポインタ保存 */

				.align	2
ctx_entry_addr:
				.long	ctx_entry



/************************************************
  実行コンテキストの切替
  void hospac_swi_cnt(
		T_HOSPAC_CTXINF *pk_pre_ctxinf,	現在のコンテキストの保存先
		T_HOSPAC_CTXINF *pk_nxt_ctxinf)	切り替えるコンテキスト
************************************************/
				.text
				.align 2
_hospac_swi_cnt:
				mov.l	 r14, @-r15
				mov.l	 r13, @-r15
				mov.l	 r12, @-r15
				mov.l	 r11, @-r15
				mov.l	 r10, @-r15
				mov.l	 r9, @-r15
				mov.l	 r8, @-r15		/* r8-r14を保存 */

				sts.l	 pr, @-r15		/* 戻り番地を保存 */

				mov.l	 r15, @(0, r4)	/* スタックポインタ保存 */
				mov.l	 @(0,r5), r15	/* スタックポインタ復帰 */

				lds.l	 @r15+, pr		/* 戻り番地を復帰 */

				mov.l	 @r15+, r8		/* r8-r14を復帰 */
				mov.l	 @r15+, r9
				mov.l	 @r15+, r10
				mov.l	 @r15+, r11
				mov.l	 @r15+, r12
				mov.l	 @r15+, r13
				rts
				mov.l	 @r15+, r14



				.end



/* ------------------------------------------------------------------------ */
/*  Copyright (C) 1998-2002 by Ryuji Fuchikami                              */
/* ------------------------------------------------------------------------ */
