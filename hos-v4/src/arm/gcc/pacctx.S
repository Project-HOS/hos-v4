/* ------------------------------------------------------------------------ */
/*  Hyper Operating System V4  μITRON4.0仕様 Real-Time OS                  */
/*    プロセッサ抽象化コンポーネント (ARM gcc用)                            */
/*                                                                          */
/*                                  Copyright (C) 1998-2002 by Project HOS  */
/*                                  http://sourceforge.jp/projects/hos/     */
/* ------------------------------------------------------------------------ */


				.global	hospac_dis_int		/* 割り込み禁止 */
				.global	hospac_ena_int		/* 割り込み許可 */
				.global	hospac_cre_ctx_asm	/* 実行コンテキストの作成 */
				.global	hospac_swi_ctx		/* 実行コンテキストの切替 */


				.text
				.align	4


/************************************************
  割り込み禁止
  void hospac_dis_int(void)
*************************************************/
hospac_dis_int:
				mov		a1, #0				/* 割り込み禁止を指定 */
				swi		0x10				/* スーパバイーザーコール */
				mov		pc, lr


/************************************************
  割り込み許可
  void hospac_ena_int(void)
*************************************************/
hospac_ena_int:
				mov		a1, #1				/* 割り込み許可を指定 */
				swi		0x10				/* スーパバイーザーコール */
				mov		pc, lr


/************************************************
  実行コンテキストエントリーアドレス
*************************************************/
ctx_entry:
				mov		a1, v2				/* 実行時パラメータを第一引数に設定 */
				mov		pc, v1				/* 実行アドレスに分岐 */


/************************************************
  実行コンテキストの作成
  void hospac_cre_ctx_asm(
		T_HOSPAC_CTXINF *pk_ctxinf,			作成するコンテキスト
		VP     sp,							スタックポインタ
		void   (*task)(VP_INT),				実行アドレス
		VP_INT exinf						実行時パラメータ
	)
*************************************************/
hospac_cre_ctx_asm:
				stmfd	sp!, {v1}			/* 作業レジスタ退避 */
				ldr		v1, =ctx_entry
				stmfd	a2!, {v1}			/* エントリーポイントを設定 */
				sub		a2, a2, #28			/* v3-v8, ip 分減算 */
				stmfd	a2!, {a3,a4}		/* v1, v2 の領域に実行アドレスとパラメータ格納 */
				str		a2, [a1]			/* コンテキストとして sp を保存 */
				ldmfd	sp!, {v1}			/* 作業レジスタ復帰 */
				mov		pc, lr				/* リターン */


/************************************************
  実行コンテキストの切替
  void hospac_swi_ctx(
		T_HOSPAC_CTXINF *pk_pre_ctxinf,		現在のコンテキストの保存先
		T_HOSPAC_CTXINF *pk_nxt_ctxinf		切り替えるコンテキスト
		)
*************************************************/
hospac_swi_ctx:
				stmfd	sp!, {v1-v8,ip,lr}	/* レジスタ保存 */
				str		sp, [a1]			/* スタックポインタ保存 */
				ldr		sp, [a2]			/* スタックポインタ復帰 */
				ldmfd	sp!, {v1-v8,ip,pc}	/* レジスタ復帰＆リターン */



				.end


/* ------------------------------------------------------------------------ */
/*  Copyright (C) 1998-2002 by Project HOS                                  */
/* ------------------------------------------------------------------------ */
